// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  name     String
  email    String  @unique
  password String
  skills   Skill[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Skill {
  id         Int        @id @default(autoincrement())
  name       String
  weakness   String[]
  questions  Question[]
  topics     Topic[]
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  User       User?      @relation(fields: [userId], references: [id])
  userId     Int?
}

model Question {
  id      Int      @id @default(autoincrement())
  text    String
  options String[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  Skill      Skill    @relation(fields: [skillId], references: [id])
  skillId    Int
}

model Topic {
  id         Int        @id @default(autoincrement())
  name       String
  subtopics  SubTopic[]
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  Skill      Skill      @relation(fields: [skillId], references: [id])
  skillId    Int
}

model SubTopic {
  id   Int    @id @default(autoincrement())
  name String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  Topic      Topic    @relation(fields: [topicId], references: [id])
  topicId    Int
}
